* Startup
** Personal Stuff
  Some "important" settings
 
  #+BEGIN_SRC emacs-lisp
  
  (defun package--save-selected-packages (&rest opt) nil)

  (setq inhibit-startup-screen t)

  (tool-bar-mode 0)

  (set-default-font "FiraCode 10")

  (global-display-line-numbers-mode t)
  (setq global-display-line-numbers 'relative)
  
  #+END_SRC

** Packages
   Here are all the package downloads and requirementes
*** Downloads and setup
   #+BEGIN_SRC emacs-lisp 

   ;; Set up package.el to work with MELPA
   (require 'package)
   (add-to-list 'package-archives
   	    '("melpa" . "https://melpa.org/packages/"))
   (package-initialize)
   ;;(package-refresh-contents)
   
   (defun packages-install (packages)
     (dolist (it packages)
       (when (not (package-installed-p it))
         (package-install it)))
       (delete-other-windows))

   (require 'use-package)
   ;; Install extensions if they're missing
   (defun init--install-packages ()
     (packages-install
       '(
       evil
       auto-complete
       use-package
       flycheck
       lua-mode
       )))

    (condition-case nil
        (init--install-packages)
      (error
	(package-refresh-contents)
	(init--install-packages)))
   
   (require 'evil)
   (evil-mode t)
   
   (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
   
   (ido-mode t)
   
   (ac-config-default)
   
   (use-package flycheck
   :ensure t
   :init (global-flycheck-mode))

   ;;;; This snippet enables lua-mode
   (autoload 'lua-mode "lua-mode" "Lua editing mode." t)
   (add-to-list 'auto-mode-alist '("\\.lua$" . lua-mode))
   (add-to-list 'interpreter-mode-alist '("lua" . lua-mode))


   #+END_SRC

*** Configs
    #+BEGIN_SRC emacs-lisp
    
    (load-theme 'dracula t)
    ;; backup dir
    (setq backup-directory-alist '(("." . "~/.emacs_saves")))

    #+END_SRC
**** Keybindings
     #+BEGIN_SRC emacs-lisp

     (global-set-key (kbd "M-x") 'smex)
     (global-set-key (kbd "M-f") '()) ;; TODO
     
     (define-key ac-mode-map (kbd "M-TAB") 'auto-complete)
     (ac-set-trigger-key "TAB")
     (setq ac-auto-start nil)
     

     #+END_SRC
